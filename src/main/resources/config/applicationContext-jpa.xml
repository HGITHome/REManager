<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
    
 <context:component-scan base-package="com.dgut..modules.*.*.*">  
      <context:exclude-filter type="regex" expression=".*action$"/>  
   </context:component-scan>
  <context:property-placeholder location="classpath:db.properties" />
 <!--配置数据源-->
 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="clone">
		<property name="driverClass" value="${dataSource.driverClassName}"></property>
		<property name="jdbcUrl" 	 value="${dataSource.url}"></property>
		<property name="user" 		 value="${dataSource.username}"></property>
		<property name="password" 	 value="${dataSource.password}"></property>
		<property name="maxPoolSize" value="40"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="initialPoolSize" value="1"></property>
		<property name="maxIdleTime" value="20"></property> 
	</bean>
	
	<!-- 3.配置hibernate5的会话工厂SessionFactory-->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--如果删除了persistence.xml，则需要指定实体所在的路径否则会报找不到该文件-->  
		<property name="packagesToScan" value="com.dgut.*.*.*"/> 
		<!--用于指定持久化实方言-->
		<property name="jpaDialect">    
		    <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<!-- ClassLoader 实现 LoadTimeWeaver-->  
		<property name="loadTimeWeaver">
			<bean  class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<!-- 用于指定持久化实现厂商类 -->
		<property name="persistenceProvider">    
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
		</property>    
		<property name="jpaProperties">
             <props>
                  <!-- 命名规则 My_NAME->MyName
                 <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop> -->
                 <prop key="hibernate.dialect">${hibernate.dialect}</prop>
				 <prop key="hibernate.max_fetch_depth">2</prop>
				 <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                 <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!--                
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.default_batch_fetch_size">16</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="cache.cache.use_query_cache">true</prop>
				<prop key="cache.cache.use_second_level_cache">true</prop>
				 -->
			</props>
		</property>
	</bean>
	
	<!-- 4.配置Spring data JPA的事务管理（业务逻辑上数据操作的一致性） -->
	 <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
       <property name="entityManagerFactory" ref="entityManagerFactory" />  
     </bean>
  <!-- 使用annotation定义事务  默认：transaction-manager="transactionManager"-->
	<tx:annotation-driven  proxy-target-class="true" />
	
	<jpa:repositories base-package="com.dgut.*.*.*" />
 </beans>